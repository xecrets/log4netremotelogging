<?xml version="1.0" encoding="utf-8" ?>
<configuration>
    <configSections>
        <section name="log4net"
                 type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" />
    </configSections>
    <log4net>
        <!-- This is a sample appender to use in the *client* - copy and paste and modify to taste -->
        <appender name="remotingAppender"
                  type="log4net.Appender.RemotingAppender" >
            <!-- The remoting URL to the remoting server object -->
            <sink value="tcp://localhost:8085/Log4netRemotingServerService" />
            <!-- Send all events, do not discard events when the buffer is full -->
            <lossy value="false" />
            <!-- The number of events to buffer before sending -->
            <bufferSize value="10" />
            <!-- Do not store event data that is slow to generate -->
            <onlyFixPartialEventData value="true" />
            <!-- Specify an evaluator to send the events immediately under certain conditions, e.g. when an error event ocurrs -->
            <evaluator type="log4net.Core.LevelEvaluator">
                <threshold value="WARN" />
            </evaluator>
        </appender>

        <appender name="fileLogAppender"
                  type="log4net.Appender.RollingFileAppender" >
            <!-- The path is relative to the application base. Typically the Network Service account must have modify rights there.
                 You probably do NOT want to place it in the application base directory, as it is potentially avaialable to Web site vistors.
                 DO CHANGE THE LOCATION BELOW FOR PRODUCTION SYSTEMS -->
            <file value="${REMOTELOG4NETLOGDIR}Log4net-log.txt" />
            <datePattern value="'-'yyyyMMdd'.txt'" />
            <!-- Typical encoding values are Unicode/utf-16 or utf-8 or ascii. See System.Text.Encoding for more info. Omit this tag to get the system default Ansi -->
            <!-- Use utf-8 for the file appender to conform to typical practices and reduce log file size -->
            <encoding value="utf-8" />
            <appendToFile value="true" />
            <rollingStyle value="Date" />
            <layout type="log4net.Layout.PatternLayout">
                <!-- You should be aware that generating type and method information is very SLOW, and you *cant* do it when logging via remote. -->
                <conversionPattern value="%date %-7level [%-3thread] (%-10property{log4net:HostName}) - %message (%logger) %exception %n" />
            </layout>
        </appender>

        <!-- Try the logview4net utility to listen to UDP-logs, download from sourceforge.net -->
        <appender name="udpLogAppender"
                  type="log4net.Appender.UdpAppender" >
            <!-- Typical encoding values are Unicode/utf-16 or utf-8 or ascii. See System.Text.Encoding for more info. Omit this tag to get the system default Ansi -->
            <!-- Use utf-16 since it's default for logvivew4net -->
            <encoding value="utf-16" />
            <!-- Be careful where you send the logs, they may contain sensitive data. You can use 224.0.0.1 for the local net -->
            <remoteAddress value="127.0.0.1" />
            <remotePort value="8082" />
            <layout type="log4net.Layout.PatternLayout">
                <!-- You should be aware that generating type and method information is very SLOW, and you *cant* do it when logging via remote. -->
                <conversionPattern value="%date %-7level [%-3thread] (%-10property{log4net:HostName}) - %message (%logger) %exception %n" />
            </layout>
        </appender>

        <root>
            <!-- This serves as an additional 'global' filter - the client as already decided what to log... -->
            <level value="DEBUG" />
            <appender-ref ref="fileLogAppender" />
            <!--<appender-ref ref="udpLogAppender" />-->
        </root>
    </log4net>

    <system.runtime.remoting>
        <application name="Log4netRemotingServerService">
            <!-- We need to define the remoting channels on which we will publish
           the remote logging sink. -->
            <channels>
                <channel displayName="Log4net Remoting Server Channel"
                         ref="tcp server"
                         port="8085" />
            </channels>
        </application>
    </system.runtime.remoting>
    
    <appSettings>
        <!-- Set to true to enable log4net internal debugging. -->
        <add key="log4net.Internal.Debug"
             value="false"/>
    </appSettings>
</configuration>